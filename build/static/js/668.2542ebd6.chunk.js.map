{"version":3,"file":"static/js/668.2542ebd6.chunk.js","mappings":"gNAuGA,MAjGA,SAAoBA,GAGhB,OAA+BC,EAAAA,EAAAA,UAAS,CACpCC,KAAK,GACLC,KAAK,GACLC,WAAY,KAHhB,eAAOC,EAAP,KAAiBC,EAAjB,KAoCMC,EAAoB,SAACC,GACvBA,EAAMC,iBAEN,IAAMC,EAAUF,EAAMG,OAAOC,aAAa,QACpCC,EAAML,EAAMG,OAAOE,MACnBC,GAAY,UAAIT,GACtBS,EAAYJ,GAAWG,EACvBP,EAAWQ,EAEZ,EAoBH,OAAQ,+BAEL,gBAAKC,UAAU,QAAf,UACC,UAACC,EAAA,EAAD,CAAMC,SArBY,SAACT,GACnBA,EAAMC,iBAEPJ,EAAQa,KAA6B,IAAvBlB,EAAMmB,QAAQC,OAAW,EAAEpB,EAAMmB,QAAQnB,EAAMmB,QAAQC,OAAO,GAAGF,KAAK,EACnFb,EAAQgB,OAAO,UACdrB,EAAMsB,OAAOjB,GACbG,EAAMG,OAAO,GAAGE,MAAM,GACtBL,EAAMG,OAAO,GAAGE,MAAM,GACtBL,EAAMG,OAAO,GAAGE,MAAM,GAIvBU,MAAM,4BACT,EAQG,WACI,mBAAS,mBACT,yCAAqB,mBAAS,mBAC1B,SAACP,EAAA,QAAD,CAAYQ,GAAG,OAAOC,IAAI,OAA1B,mBAEA,SAACT,EAAA,UAAD,CAAcQ,GAAG,OAAOtB,KAAK,OAAOwB,KAAK,OAASC,SAAUpB,KAC3D,mBAAS,mBAEV,SAACS,EAAA,QAAD,CAAYQ,GAAG,OAAOC,IAAI,OAA1B,mBACA,SAACT,EAAA,UAAD,CAAcQ,GAAG,OAAOtB,KAAK,OAAOwB,KAAK,OAASC,SAAUpB,KAC5D,mBAAS,mBACT,SAACS,EAAA,QAAD,CAAYQ,GAAG,OAAOC,IAAI,aAA1B,yBACA,SAACT,EAAA,UAAD,CAAcQ,GAAG,OAAOtB,KAAK,aAAawB,KAAK,OAAQC,SAAUpB,KACjE,mBAAS,mBAAS,mBACtB,SAACqB,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAQ,UAAUN,GAAG,KAAKE,KAAK,SAAjD,+BAUX,C","sources":["Components/ApplyLeave/ApplyLeave.js"],"sourcesContent":["import React , {useState } from 'react';\r\nimport { Button, Form,Container } from 'react-bootstrap';\r\n\r\nimport './ApplyLeave.css'\r\n\r\n\r\nfunction ApplyLeave(props) {\r\n    \r\n\r\n    const [records , setRecords] = useState({\r\n        name:\"\",\r\n        city:\"\",\r\n        connection: \"\",\r\n    })\r\n\r\n    // const nameHandler = (event) => {\r\n    //     // setRecords({\r\n    //     //     ...records,\r\n    //     //     name: event.target.value\r\n    //     // });\r\n    //        \r\n    //     // setRecords((oldState) => {\r\n    //     //     return {...oldState,name: event.target.value}\r\n    //     // })\r\n    \r\n    //     setname(event.target.value);\r\n    //    // console.log(event.target.value);\r\n    // }\r\n\r\n    // const cityHandler = (event) => {\r\n    //     // setRecords((oldState) => {\r\n    //     //     return {...oldState,city: event.target.value}\r\n    //     // })\r\n    //    setcity(event.target.value);\r\n    //     //console.log(event.target.value);\r\n    // }\r\n\r\n    // const connectHandler = (event) => {\r\n    //     // setRecords((oldState) => {\r\n    //     //     return {...oldState,connection: event.target.value}\r\n    //     // })\r\n    //    setconnection(event.target.value);\r\n    //     //console.log(event.target.value);\r\n    // }\r\n\r\n    const handleAddFormChange=(event)=>{\r\n        event.preventDefault();\r\n    \r\n        const fieldname=event.target.getAttribute('name');\r\n        const value=event.target.value;\r\n        const newformdata={...records};\r\n        newformdata[fieldname]=value;\r\n        setRecords(newformdata);\r\n\r\n      }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n       records.slno= props.details.length===0?1:props.details[props.details.length-1].slno+1;\r\n        records.status=\"Pending\";\r\n         props.onSave(records);\r\n         event.target[0].value='';\r\n         event.target[1].value='';\r\n         event.target[2].value='';\r\n    //    setname('');\r\n    //    setcity('');\r\n    //    setconnection('');\r\n        alert(\"Leave Applied Succesfully\");\r\n    }\r\n\r\n  \r\n\r\n\r\n    return (<>\r\n       \r\n       <div className=\"leave\">\r\n        <Form onSubmit={submitHandler}>\r\n            <br></br><br></br>\r\n            <h2 > Leave Form</h2><br></br><br></br>\r\n                <Form.Label id=\"appl\" for=\"name\">NAME</Form.Label>\r\n                {/* <input type=\"number\" value={userId} onChange={userIdHandler}  /> */}\r\n                <Form.Control id=\"Name\" name=\"name\" type=\"text\"   onChange={handleAddFormChange}  />\r\n                 <br></br><br></br>\r\n            \r\n                <Form.Label id=\"appl\" for=\"city\">CITY</Form.Label>\r\n                <Form.Control id=\"City\" name=\"city\" type=\"text\"   onChange={handleAddFormChange}/>\r\n                <br></br><br></br>\r\n                <Form.Label id=\"appl\" for=\"connection\">CONNECTION</Form.Label>\r\n                <Form.Control id=\"Conn\" name=\"connection\" type=\"text\"  onChange={handleAddFormChange} />\r\n                <br></br><br></br><br></br>\r\n            <Button size='md' variant='success' id=\"hf\" type=\"submit\">Apply Leave</Button>\r\n            \r\n        </Form>\r\n        </div>\r\n        \r\n\r\n        \r\n    </>\r\n\r\n    );\r\n}\r\n\r\nexport default ApplyLeave;\r\n\r\n\r\n\r\n"],"names":["props","useState","name","city","connection","records","setRecords","handleAddFormChange","event","preventDefault","fieldname","target","getAttribute","value","newformdata","className","Form","onSubmit","slno","details","length","status","onSave","alert","id","for","type","onChange","Button","size","variant"],"sourceRoot":""}